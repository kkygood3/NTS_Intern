<?xml version="1.0" encoding="UTF-8"?>

<!-- DTD 선언 -->
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.nts.reservation.dao.ReservationInfoMapper">
	<select id="selectReservationPageInfoByDisplayInfoId" resultType="ReservationPageInfo">
		SELECT	d.product_id,
				d.id AS display_info_id,
				p.description,
				d.place_name,
				d.opening_hours,
				pf.save_file_name AS main_image_name,
				adddate(now(), interval floor(rand()*5) day) AS reservation_date
				
		FROM 	display_info AS d
				INNER JOIN	product AS p 
							ON	d.product_id = p.id
				INNER JOIN	product_image AS pi
							ON	p.id = pi.product_id
				INNER JOIN	file_info AS pf
							ON	pf.id = pi.file_id
							
		WHERE	d.id = #{displayInfoId}
				AND pi.type = "ma"
	</select>
	
 	<insert id = "insertReservationInfo" parameterType="ReservationInfo">
		INSERT INTO reservation_info 
						(product_id,	display_info_id,	reservation_name,	reservation_tel,	reservation_email,		reservation_date,	create_date)
					VALUES
						(#{productId},	#{displayInfoId},	#{reservationName},	#{reservationTel},	#{reservationEmail},	#{reservationDate},	#{createDate})
		<selectKey resultType="long" keyProperty="id" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>  
	</insert>
	
 	<select id="selectCancelReservationInfoByReservationEmail" resultType="ReservationDisplayItem"> 
		SELECT	p.id AS product_id,
				r.id AS reservation_info_id,
				p.description,
				r.reservation_date,
				r.cancel_flag AS cancel,
				d.place_name,
				sum(pp.price * rp.count) AS price,
				r.modify_date
				
		FROM	reservation_info AS r
				INNER JOIN	product AS p
							ON	r.product_id = p.id
				INNER JOIN	display_info AS d
							ON	r.display_info_id = d.id
				INNER JOIN	reservation_info_price AS rp
							ON	rp.reservation_info_id = r.id
				INNER JOIN	product_price AS pp
							ON	rp.product_price_id = pp.id
		
		WHERE	r.reservation_email = #{reservationEmail}
				AND r.cancel_flag = true
				
		GROUP BY r.id
		
		ORDER BY r.modify_date DESC
		
		LIMIT #{start}, #{limit}
	</select>
		<select id="selectUsedReservationInfoByReservationEmail" resultType="ReservationDisplayItem"> 
	<![CDATA[
		SELECT	p.id AS product_id,
				r.id AS reservation_info_id,
				p.description,
				r.reservation_date,
				r.cancel_flag AS cancel,
				d.place_name,
				sum(pp.price * rp.count) AS price,
				r.modify_date
				
		FROM	reservation_info AS r
				INNER JOIN	product AS p
							ON	r.product_id = p.id
				INNER JOIN	display_info AS d
							ON	r.display_info_id = d.id
				INNER JOIN	reservation_info_price AS rp
							ON	rp.reservation_info_id = r.id
				INNER JOIN	product_price AS pp
							ON	rp.product_price_id = pp.id
		
		WHERE	r.reservation_email = #{reservationEmail}
				AND r.cancel_flag = false
				AND r.reservation_date <= now()
				
		GROUP BY r.id

		ORDER BY datediff(now(), r.reservation_date)
		
		LIMIT #{start}, #{limit}
	]]>
	</select>
	
	<select id="selectConfirmedReservationInfoByReservationEmail" resultType="ReservationDisplayItem"> 
	<![CDATA[
		SELECT	p.id AS product_id,
				r.id AS reservation_info_id,
				p.description,
				r.reservation_date,
				r.cancel_flag AS cancel,
				d.place_name,
				sum(pp.price * rp.count) AS price,
				r.modify_date
				
		FROM	reservation_info AS r
				INNER JOIN	product AS p
							ON	r.product_id = p.id
				INNER JOIN	display_info AS d
							ON	r.display_info_id = d.id
				INNER JOIN	reservation_info_price AS rp
							ON	rp.reservation_info_id = r.id
				INNER JOIN	product_price AS pp
							ON	rp.product_price_id = pp.id
		
		WHERE	r.reservation_email = #{reservationEmail}
				AND r.cancel_flag = false
				AND r.reservation_date > now()
				
		GROUP BY r.id
		
		ORDER BY datediff(r.reservation_date, now())
		
		LIMIT #{start}, #{limit}
	]]>
	</select>
	
<!--  	<select id="selectReservationInfoByReservationEmail" resultType="ReservationDisplayItem"> 
 	<![CDATA[
		SELECT	r.id AS reservation_info_id,
				p.description,
				r.reservation_date,
				r.cancel_flag AS cancel,
				d.place_name,
				sum(pp.price * rp.count) AS price,
				r.modify_date
				
		FROM	reservation_info AS r
				INNER JOIN	product AS p
							ON r.product_id = p.id
				INNER JOIN	display_info AS d
							ON r.display_info_id = d.id
				INNER JOIN	reservation_info_price AS rp
							ON rp.reservation_info_id = r.id
				INNER JOIN	product_price AS pp
							ON rp.product_price_id = pp.id
		
		WHERE	r.reservation_email = #{reservationEmail}
	<choose>
		<when test='type == "cancel"'>
				AND r.cancel_flag = true
				
		GROUP BY r.id
		ORDER BY r.modify_date
		</when>
		<when test='type == "used"'>
				AND r.reservation_date <= now()
				
		GROUP BY r.id
		ORDER BY datediff(now(), r.reservation_date)
		</when>
		<when test='type == "confirm"'>
				AND r.reservation_date > now()
				
		GROUP BY r.id
		ORDER BY datediff(r.reservation_date, now())
		</when>
		<otherwise>
		</otherwise>
		
	</choose>
		
		LIMIT #{start}, #{limit}
	]]>
	</select>
	 -->
	<update id="updateCancelFlagToFalseByReservationInfoId" parameterType="Map"> 
		UPDATE	reservation_info
		
		SET		cancel_flag = true,
				modify_date = now()

		WHERE	id = #{reservationInfoId}
				AND	reservation_email = #{reservationEmail}
	</update>
	
	 <insert id = "insertReservationInfoPrice" parameterType="Map">
		INSERT INTO	reservation_info_price
						(reservation_info_id,	product_price_id,		count)
					VALUES
		<foreach collection="reservationInfoPriceList" item="pl" separator=", ">
						(#{reservationInfoId},	#{pl.productPriceId},	#{pl.count})
		</foreach>
	</insert>
	
	<select id="selectReservationInfoCountByReservationEmail" resultType="ReservationSummary"> 
	<![CDATA[
		SELECT	(CASE
					WHEN	r.cancel_flag = true			THEN "cancel"
            		WHEN	r.cancel_flag = false
            				AND	r.reservation_date > now()	THEN "confirmed"
            		WHEN	r.cancel_flag = false
            				AND	r.reservation_date <= now()	THEN "used"
				END) AS status,
        		count(r.id) AS count
				
		FROM	reservation_info AS r

		WHERE	r.reservation_email = #{reservationEmail}

		GROUP BY status
	]]>
	</select>
	
</mapper>